<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zhengbledor</title>
    <link>https://zhengbledor.github.io/</link>
    <description>Recent content on Zhengbledor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zhengbledor.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>六大设计原则</title>
      <link>https://zhengbledor.github.io/posts/designprinciples/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zhengbledor.github.io/posts/designprinciples/</guid>
      <description>Design Principles Link to heading 一、单一职责原则 Link to heading 一个类应该只有一个发生变化的原因。
模拟场景
一个视频网站有对用户分类的场景
访客用户只能观看480P视频，且有广告 普通会员只能观看720P视频，且有广告 VIP用户可以看1080P视频，且无广告
违背原则
public class VideoUserSerice{ public void serveGrade(String usrType){ if(usrType == &amp;#34;VIP&amp;#34;){ // 视频1080P，无广告 }else if(usrType == &amp;#34;普通会员&amp;#34;){ // 视频720P，有广告 }else if(usrType == &amp;#34;访客用户&amp;#34;){ // 视频480P，有广告 } } } 改进方案
public interface IVideoUserService{` // 清晰度 1080P、720P、480P void definition(); // 广告播放方式，有广告、无广告 void advertisement(); } 二、开闭原则 Link to heading 对象、类、模块和函数对扩展应该是开放的，但是对于修改是封闭的。
模拟场景
计算三种形状的面积，长方形、三角形、圆形。 但是后续由于pai取值的精度对于某些场景是不足的，需要扩展。
public class CalculationArea{ private final static double pai = 3.</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://zhengbledor.github.io/about/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zhengbledor.github.io/about/</guid>
      <description>郑布利多的博客，平时记载一点技术、生活的文章~~(万一哪天被裁了)~~</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengbledor.github.io/designpattern/designprinciples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhengbledor.github.io/designpattern/designprinciples/</guid>
      <description>Design Principles Link to heading 一、单一职责原则 Link to heading 一个类应该只有一个发生变化的原因。
模拟场景
一个视频网站有对用户分类的场景
访客用户只能观看480P视频，且有广告 普通会员只能观看720P视频，且有广告 VIP用户可以看1080P视频，且无广告
违背原则
public class VideoUserSerice{ public void serveGrade(String usrType){ if(usrType == &amp;#34;VIP&amp;#34;){ // 视频1080P，无广告 }else if(usrType == &amp;#34;普通会员&amp;#34;){ // 视频720P，有广告 }else if(usrType == &amp;#34;访客用户&amp;#34;){ // 视频480P，有广告 } } } 改进方案
public interface IVideoUserService{ // 清晰度 1080P、720P、480P void definition(); // 广告播放方式，有广告、无广告 void advertisement(); } 二、开闭原则 Link to heading 对象、类、模块和函数对扩展应该是开放的，但是对于修改是封闭的。
模拟场景
计算三种形状的面积，长方形、三角形、圆形。 但是后续由于pai取值的精度对于某些场景是不足的，需要扩展。
public class CalculationArea{ private final static double pai = 3.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://zhengbledor.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhengbledor.github.io/contact/</guid>
      <description>Follow me, @Zhengbledor.</description>
    </item>
    
  </channel>
</rss>
